[INFO ] 2018-11-14 16:37:09 [main] com.liang.funny.FunnyApplication - Starting FunnyApplication on zhouliang02 with PID 10644 (D:\codes\funny\target\classes started by admin in D:\codes\funny)
[INFO ] 2018-11-14 16:37:09 [main] com.liang.funny.FunnyApplication - No active profile set, falling back to default profiles: default
[INFO ] 2018-11-14 16:37:09 [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69453e37: startup date [Wed Nov 14 16:37:10 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 16:37:09 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$848cee2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration$$EnhancerBySpringCGLIB$$99a6ac74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.liang.funny.util.redis.RedisConfig$$EnhancerBySpringCGLIB$$6a3ce282] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [com.liang.funny.util.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 16:37:09 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2018-11-14 16:37:09 [main] o.a.catalina.core.StandardService - Starting service [Tomcat]
[INFO ] 2018-11-14 16:37:09 [main] o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Program Files\Python37\Scripts\;D:\Program Files\Python37\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;D:\Program Files\Java\jdk1.8.0_181\bin;D:\Program Files\Java\jdk1.8.0_181\jre\bin;D:\Program Files\mysql-5.7.23-winx64\bin;D:\Program Files\apache-maven-3.5.4\bin;D:\Program Files\Git\cmd;.]
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3106 ms
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[INFO ] 2018-11-14 16:37:09 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69453e37: startup date [Wed Nov 14 16:37:10 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.AccessController.updateAccess(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Access> com.liang.funny.controller.AccessController.getAccesss()
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.getAccessBy(int)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.delAccessBy(int)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.addAccess(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.addRole(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.getRoleBy(int)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Role> com.liang.funny.controller.RoleController.getRoles()
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.delRoleBy(int)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.RoleController.updateRole(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.addUser(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.getUserBy(int)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.User> com.liang.funny.controller.UserController.getUsers()
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.delUserBy(int)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/update/{id}],methods=[PUT]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.updateUser(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 16:37:09 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/funny/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 16:37:09 [main] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
[INFO ] 2018-11-14 16:37:09 [main] o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
[INFO ] 2018-11-14 16:37:09 [main] o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[INFO ] 2018-11-14 16:37:09 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2018-11-14 16:37:09 [main] com.liang.funny.FunnyApplication - Started FunnyApplication in 6.081 seconds (JVM running for 11.765)
[INFO ] 2018-11-14 17:20:08 [main] com.liang.funny.FunnyApplication - Starting FunnyApplication on zhouliang02 with PID 12684 (D:\codes\funny\target\classes started by admin in D:\codes\funny)
[INFO ] 2018-11-14 17:20:08 [main] com.liang.funny.FunnyApplication - No active profile set, falling back to default profiles: default
[INFO ] 2018-11-14 17:20:08 [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2002fc1d: startup date [Wed Nov 14 17:20:08 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 17:20:08 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14870bc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration$$EnhancerBySpringCGLIB$$29a0ca0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.liang.funny.util.redis.RedisConfig$$EnhancerBySpringCGLIB$$fa370019] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [com.liang.funny.util.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:20:08 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2018-11-14 17:20:08 [main] o.a.catalina.core.StandardService - Starting service [Tomcat]
[INFO ] 2018-11-14 17:20:08 [main] o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Program Files\Python37\Scripts\;D:\Program Files\Python37\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;D:\Program Files\Java\jdk1.8.0_181\bin;D:\Program Files\Java\jdk1.8.0_181\jre\bin;D:\Program Files\mysql-5.7.23-winx64\bin;D:\Program Files\apache-maven-3.5.4\bin;D:\Program Files\Git\cmd;.]
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1289 ms
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[INFO ] 2018-11-14 17:20:08 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2002fc1d: startup date [Wed Nov 14 17:20:08 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.AccessController.updateAccess(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Access> com.liang.funny.controller.AccessController.getAccesss()
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.getAccessBy(int)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.delAccessBy(int)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.addAccess(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.addRole(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.getRoleBy(int)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Role> com.liang.funny.controller.RoleController.getRoles()
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.delRoleBy(int)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.RoleController.updateRole(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.addUser(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.getUserBy(int)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.User> com.liang.funny.controller.UserController.getUsers()
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.delUserBy(int)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/update/{id}],methods=[PUT]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.updateUser(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:20:08 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/funny/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:20:08 [main] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
[INFO ] 2018-11-14 17:20:08 [main] o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
[INFO ] 2018-11-14 17:20:08 [main] o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[INFO ] 2018-11-14 17:20:08 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2018-11-14 17:20:08 [main] com.liang.funny.FunnyApplication - Started FunnyApplication in 3.001 seconds (JVM running for 7.132)
[INFO ] 2018-11-14 17:20:08 [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[INFO ] 2018-11-14 17:20:08 [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
[INFO ] 2018-11-14 17:20:08 [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 106 ms
[INFO ] 2018-11-14 17:20:08 [http-nio-8080-exec-2] c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
[INFO ] 2018-11-14 17:20:08 [http-nio-8080-exec-1] io.lettuce.core.EpollProvider - Starting without optional epoll library
[INFO ] 2018-11-14 17:20:08 [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider - Starting without optional kqueue library
[INFO ] 2018-11-14 17:27:57 [main] com.liang.funny.FunnyApplication - Starting FunnyApplication on zhouliang02 with PID 5544 (D:\codes\funny\target\classes started by admin in D:\codes\funny)
[INFO ] 2018-11-14 17:27:57 [main] com.liang.funny.FunnyApplication - No active profile set, falling back to default profiles: default
[INFO ] 2018-11-14 17:27:57 [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69453e37: startup date [Wed Nov 14 17:27:57 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 17:27:57 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$86eb09e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration$$EnhancerBySpringCGLIB$$9c04c831] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.liang.funny.util.redis.RedisConfig$$EnhancerBySpringCGLIB$$6c9afe3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [com.liang.funny.util.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:27:57 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2018-11-14 17:27:57 [main] o.a.catalina.core.StandardService - Starting service [Tomcat]
[INFO ] 2018-11-14 17:27:57 [main] o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Program Files\Python37\Scripts\;D:\Program Files\Python37\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;D:\Program Files\Java\jdk1.8.0_181\bin;D:\Program Files\Java\jdk1.8.0_181\jre\bin;D:\Program Files\mysql-5.7.23-winx64\bin;D:\Program Files\apache-maven-3.5.4\bin;D:\Program Files\Git\cmd;.]
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1238 ms
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[INFO ] 2018-11-14 17:27:57 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69453e37: startup date [Wed Nov 14 17:27:57 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.AccessController.updateAccess(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Access> com.liang.funny.controller.AccessController.getAccesss()
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.getAccessBy(int)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.delAccessBy(int)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.addAccess(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.addRole(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.getRoleBy(int)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Role> com.liang.funny.controller.RoleController.getRoles()
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.delRoleBy(int)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.RoleController.updateRole(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.addUser(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.getUserBy(int)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.User> com.liang.funny.controller.UserController.getUsers()
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.delUserBy(int)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/update/{id}],methods=[PUT]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.updateUser(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:27:57 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/funny/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:27:57 [main] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
[INFO ] 2018-11-14 17:27:57 [main] o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
[INFO ] 2018-11-14 17:27:57 [main] o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[INFO ] 2018-11-14 17:27:57 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2018-11-14 17:27:57 [main] com.liang.funny.FunnyApplication - Started FunnyApplication in 2.823 seconds (JVM running for 8.392)
[INFO ] 2018-11-14 17:27:57 [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[INFO ] 2018-11-14 17:27:57 [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
[INFO ] 2018-11-14 17:27:57 [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
[INFO ] 2018-11-14 17:27:57 [http-nio-8080-exec-1] io.lettuce.core.EpollProvider - Starting without optional epoll library
[INFO ] 2018-11-14 17:27:57 [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider - Starting without optional kqueue library
[INFO ] 2018-11-14 17:42:20 [main] com.liang.funny.FunnyApplication - Starting FunnyApplication on zhouliang02 with PID 12268 (D:\codes\funny\target\classes started by admin in D:\codes\funny)
[INFO ] 2018-11-14 17:42:20 [main] com.liang.funny.FunnyApplication - No active profile set, falling back to default profiles: default
[INFO ] 2018-11-14 17:42:20 [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ae13544: startup date [Wed Nov 14 17:42:20 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 17:42:20 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d1eba52e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties' of type [org.springframework.boot.autoconfigure.data.redis.RedisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' of type [org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration$$EnhancerBySpringCGLIB$$e7056378] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'lettuceClientResources' of type [io.lettuce.core.resource.DefaultClientResources] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConnectionFactory' of type [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [com.liang.funny.util.redis.RedisConfig$$EnhancerBySpringCGLIB$$b79b9986] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheManager' of type [org.springframework.data.redis.cache.RedisCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'keyGenerator' of type [com.liang.funny.util.redis.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2018-11-14 17:42:20 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2018-11-14 17:42:20 [main] o.a.catalina.core.StandardService - Starting service [Tomcat]
[INFO ] 2018-11-14 17:42:20 [main] o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.34
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Program Files\Python37\Scripts\;D:\Program Files\Python37\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;D:\Program Files\Java\jdk1.8.0_181\bin;D:\Program Files\Java\jdk1.8.0_181\jre\bin;D:\Program Files\mysql-5.7.23-winx64\bin;D:\Program Files\apache-maven-3.5.4\bin;D:\Program Files\Git\cmd;.]
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1277 ms
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[INFO ] 2018-11-14 17:42:20 [localhost-startStop-1] o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ae13544: startup date [Wed Nov 14 17:42:20 CST 2018]; root of context hierarchy
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.AccessController.updateAccess(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Access> com.liang.funny.controller.AccessController.getAccesss()
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.getAccessBy(int)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.delAccessBy(int)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/access/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.AccessController.addAccess(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.addRole(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.getRoleBy(int)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.Role> com.liang.funny.controller.RoleController.getRoles()
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.RoleController.delRoleBy(int)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update/{id}],methods=[PUT]}" onto public boolean com.liang.funny.controller.RoleController.updateRole(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/add],methods=[POST]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.addUser(java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get/{id}],methods=[GET],produces=[application/json]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.getUserBy(int)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/get],methods=[GET],produces=[application/json]}" onto public java.util.List<com.liang.funny.model.User> com.liang.funny.controller.UserController.getUsers()
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/del/{id}],methods=[DELETE]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.delUserBy(int)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/user/update/{id}],methods=[PUT]}" onto public com.liang.funny.util.Json.JsonResult com.liang.funny.controller.UserController.updateUser(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:42:20 [main] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/funny/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO ] 2018-11-14 17:42:20 [main] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
[INFO ] 2018-11-14 17:42:20 [main] o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
[INFO ] 2018-11-14 17:42:20 [main] o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[INFO ] 2018-11-14 17:42:20 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2018-11-14 17:42:20 [main] com.liang.funny.FunnyApplication - Started FunnyApplication in 2.935 seconds (JVM running for 7.771)
[INFO ] 2018-11-14 17:42:20 [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
[INFO ] 2018-11-14 17:42:20 [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
[INFO ] 2018-11-14 17:42:20 [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 13 ms
[INFO ] 2018-11-14 17:42:20 [http-nio-8080-exec-1] io.lettuce.core.EpollProvider - Starting without optional epoll library
[INFO ] 2018-11-14 17:42:20 [http-nio-8080-exec-1] io.lettuce.core.KqueueProvider - Starting without optional kqueue library
